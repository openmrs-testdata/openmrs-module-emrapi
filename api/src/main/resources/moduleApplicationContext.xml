<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  		    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="accountService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.account.AccountServiceImpl">
                <property name="userService" ref="userService"/>
                <property name="personService" ref="personService"/>
                <property name="providerService" ref="providerService"/>
                <property name="providerManagementService" ref="providerManagementService"/>
                <property name="domainWrapperFactory" ref="domainWrapperFactory"/>
                <property name="emrApiProperties" ref="emrApiProperties"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.account.AccountService</value>
                <ref bean="accountService"/>
            </list>
        </property>
    </bean>



    <bean id="adtService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.adt.AdtServiceImpl">
                <property name="emrApiProperties" ref="emrApiProperties"/>
                <property name="encounterService" ref="encounterService"/>
                <property name="visitService" ref="visitService"/>
                <property name="locationService" ref="locationService"/>
                <property name="providerService" ref="providerService"/>
                <property name="patientService" ref="patientService"/>
                <property name="domainWrapperFactory" ref="domainWrapperFactory"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.adt.AdtService</value>
                <ref bean="adtService"/>
            </list>
        </property>
    </bean>

   <bean id="exitFromCareService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.exitfromcare.ExitFromCareServiceImpl">
                <property name="emrApiProperties" ref="emrApiProperties"/>
                <property name="visitService" ref="visitService"/>
                <property name="patientService" ref="patientService"/>
                <property name="programWorkflowService" ref="programWorkflowService"/>
                <property name="adtService" ref="adtService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.exitfromcare.ExitFromCareService</value>
                <ref bean="exitFromCareService"/>
            </list>
        </property>
    </bean>

    <bean id="emrConceptService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.emrapi.concept.EmrConceptServiceImpl">
                <property name="dao">
                    <bean class="${project.parent.groupId}.${project.parent.artifactId}.concept.HibernateEmrConceptDAO">
                        <property name="sessionFactory">
                            <ref bean="dbSessionFactory"/>
                        </property>
                    </bean>
                </property>
                <property name="emrApiProperties" ref="emrApiProperties"/>
                <property name="conceptService" ref="conceptService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

     <bean id="emrPatientService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.emrapi.patient.EmrPatientServiceImpl">
                <property name="dao">
                    <bean class="${project.parent.groupId}.${project.parent.artifactId}.patient.HibernateEmrPatientDAO">
                        <property name="sessionFactory">
                            <ref bean="dbSessionFactory"/>
                        </property>
                    </bean>
                </property>
                <property name="emrApiProperties" ref="emrApiProperties"/>
                <property name="patientService" ref="patientService"/>
                <property name="adtService" ref="adtService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean id="applicationEventService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.event.ApplicationEventServiceImpl" />
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean id="emrPersonImageService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.emrapi.person.image.EmrPersonImageServiceImpl">
                <property name="emrApiProperties" ref="emrApiProperties"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean id="emrPatientProfileService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.emrapi.patient.EmrPatientProfileServiceImpl">
                <property name="patientService" ref="patientService"/>
                <property name="emrPersonImageService" ref="emrPersonImageService"/>
                <property name="personService" ref="personService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean id="dispositionService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="org.openmrs.module.emrapi.disposition.DispositionServiceImpl">
                <constructor-arg ref="emrConceptService"/>
                <constructor-arg ref="conceptService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean id="emrEncounterService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target" ref="emrEncounterServiceTarget"/>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean name="emrEncounterServiceTarget" class="org.openmrs.module.emrapi.encounter.EmrEncounterServiceImpl">
        <constructor-arg name="administrationService" ref="adminService"/>
        <constructor-arg name="encounterDispositionServiceHelper" ref="encounterDispositionServiceHelper"/>
        <constructor-arg name="encounterObservationServiceHelper" ref="encounterObservationServiceHelper"/>
        <constructor-arg name="encounterProviderServiceHelper" ref="encounterProviderServiceHelper"/>
        <constructor-arg name="encounterService" ref="encounterService"/>
        <constructor-arg name="encounterTransactionMapper" ref="encounterTransactionMapper"/>
        <constructor-arg name="locationService" ref="locationService"/>
        <constructor-arg name="patientService" ref="patientService"/>
        <constructor-arg name="providerService" ref="providerService"/>
        <constructor-arg name="visitService" ref="visitService"/>
        <constructor-arg name="emrOrderService" ref="emrOrderService"/>
    </bean>

    <bean id="emrOrderService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target" ref="emrOrderServiceTarget"/>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean name="emrOrderServiceTarget" class="org.openmrs.module.emrapi.encounter.EmrOrderServiceImpl">
        <constructor-arg name="openMRSDrugOrderMapper" ref="openMRSDrugOrderMapper"/>
        <constructor-arg name="encounterService" ref="encounterService"/>
        <constructor-arg name="openMRSOrderMapper" ref="openMRSOrderMapper"/>
        <constructor-arg name="orderSetService" ref="orderSetService"/>
        <constructor-arg name="openMRSOrderGroupMapper" ref="openMRSOrderGroupMapper"/>
    </bean>

    <bean id="encounterObservationServiceHelper" class="org.openmrs.module.emrapi.encounter.EncounterObservationServiceHelper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="emrApiProperties" ref="emrApiProperties"/>
        <constructor-arg name="obsService" ref="obsService"/>
        <constructor-arg name="orderService" ref="orderService"/>
        <constructor-arg name="obsMapper" ref="obsMapper"/>
    </bean>

    <bean id="encounterDispositionServiceHelper" class="org.openmrs.module.emrapi.encounter.EncounterDispositionServiceHelper">
        <constructor-arg ref="conceptService"/>
    </bean>

    <bean id="encounterProviderServiceHelper" class="org.openmrs.module.emrapi.encounter.EncounterProviderServiceHelper">
        <constructor-arg ref="providerService"/>
        <constructor-arg ref="encounterService"/>
    </bean>

    <bean id="emrVisitDAOImpl" class="${project.parent.groupId}.${project.parent.artifactId}.db.EmrVisitDAOImpl">
        <property name="sessionFactory">
            <ref bean="dbSessionFactory"/>
        </property>
    </bean>

    <bean id="visitResponseMapper" class="org.openmrs.module.emrapi.visit.VisitResponseMapper">
        <constructor-arg name="encounterTransactionMapper" ref="encounterTransactionMapper"/>
    </bean>

    <bean id="encounterProviderMapper" class="org.openmrs.module.emrapi.encounter.EncounterProviderMapper">
    </bean>

    <bean id="encounterObservationsMapper" class="org.openmrs.module.emrapi.encounter.EncounterObservationsMapper">
        <constructor-arg name="observationMapper" ref="observationMapper"/>
        <constructor-arg name="diagnosisMapper" ref="diagnosisMapper"/>
        <constructor-arg name="dispositionMapper" ref="dispositionMapper"/>
        <constructor-arg name="emrApiProperties" ref="emrApiProperties"/>
        <constructor-arg name="observationTypeMatcher" ref="observationTypeMatcher"/>
    </bean>

    <bean id="observationMapper" class="org.openmrs.module.emrapi.encounter.ObservationMapper">
        <constructor-arg name="conceptMapper" ref="conceptMapper"/>
        <constructor-arg name="drugMapper" ref="drugMapper"/>
        <constructor-arg name="userMapper" ref="userMapper"/>
    </bean>

    <bean id="obsMapper" class="org.openmrs.module.emrapi.encounter.mapper.ObsMapper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="emrApiProperties" ref="emrApiProperties"/>
        <constructor-arg name="obsService" ref="obsService"/>
        <constructor-arg name="orderService" ref="orderService"/>
    </bean>

    <bean id="conceptMapper" class="org.openmrs.module.emrapi.encounter.ConceptMapper"/>

    <bean id="diagnosisMapper" class="org.openmrs.module.emrapi.encounter.DiagnosisMapper">
    </bean>

    <bean id="dispositionMapper" class="org.openmrs.module.emrapi.encounter.DispositionMapper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="userMapper" ref="userMapper"/>
    </bean>

    <bean id="observationTypeMatcher" class="org.openmrs.module.emrapi.encounter.matcher.ObservationTypeMatcher">
        <constructor-arg name="emrApiProperties" ref="emrApiProperties"/>
        <constructor-arg name="conceptService" ref="conceptService"/>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.encounter.EmrEncounterService</value>
                <ref bean="emrEncounterService"/>
            </list>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.concept.EmrConceptService</value>
                <ref bean="emrConceptService"/>
            </list>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.patient.EmrPatientService</value>
                <ref bean="emrPatientService"/>
            </list>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.event.ApplicationEventService</value>
                <ref bean="applicationEventService"/>
            </list>
        </property>
    </bean>


    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.person.image.EmrPersonImageService</value>
                <ref bean="emrPersonImageService"/>
            </list>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.disposition.DispositionService</value>
                <ref bean="dispositionService"/>
            </list>
        </property>
    </bean>

    <bean id="emrEncounterDAO" class="${project.parent.groupId}.${project.parent.artifactId}.db.HibernateEmrEncounterDAO">
        <property name="sessionFactory">
            <ref bean="dbSessionFactory"/>
        </property>
    </bean>

    <bean id="dbSessionDAO" class="org.openmrs.module.emrapi.db.DbSessionDAOImpl">
        <property name="sessionFactory"><ref bean="dbSessionFactory"/></property>
    </bean>
    <bean id="dbSessionUtil" class="org.openmrs.module.emrapi.db.DbSessionUtil">
        <property name="dbSessionDAO"><ref bean="dbSessionDAO"/></property>
    </bean>

    <bean id="encounterTypetoVisitTypeMapper" class="org.openmrs.module.emrapi.adt.EncounterTypetoVisitTypeMapper">
        <property name="adminService">
            <ref bean="adminService"/>
        </property>
        <property name="visitService">
            <ref bean="visitService"/>
        </property>
    </bean>

    <bean id="orderMetadataService" class="org.openmrs.module.emrapi.encounter.OrderMetadataService">
        <constructor-arg name="orderService" ref="orderService"/>
    </bean>

    <bean id="dosingInstructionsMapper" class="org.openmrs.module.emrapi.encounter.mapper.DosingInstructionsMapper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="orderMetadataService" ref="orderMetadataService"/>
    </bean>

    <bean id="openMRSDrugOrderMapper" class="org.openmrs.module.emrapi.encounter.mapper.OpenMRSDrugOrderMapper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="dosingInstructionsMapper" ref="dosingInstructionsMapper"/>
        <constructor-arg name="orderMetadataService" ref="orderMetadataService"/>
        <constructor-arg name="orderService" ref="orderService"/>
    </bean>

    <bean id="openMRSOrderMapper" class="org.openmrs.module.emrapi.encounter.mapper.OpenMRSOrderMapper">
        <constructor-arg name="conceptService" ref="conceptService"/>
        <constructor-arg name="orderService" ref="orderService"/>
    </bean>

    <bean id="openMRSOrderGroupMapper" class="org.openmrs.module.emrapi.encounter.mapper.OpenMRSOrderGroupMapper">
        <constructor-arg name="orderSetService" ref="orderSetService"/>
        <constructor-arg name="orderService" ref="orderService"/>
    </bean>

    <bean id="emrDiagnosisDAO" class="org.openmrs.module.emrapi.diagnosis.EmrDiagnosisDAOImpl">
        <property name="sessionFactory"><ref bean="dbSessionFactory"/></property>
    </bean>

    <bean id="coreDiagnosisService" class="org.openmrs.module.emrapi.diagnosis.CoreDiagnosisService">
        <property name="emrDiagnosisDAO" ref="emrDiagnosisDAO"/>
    </bean>

    <bean id="obsGroupDiagnosisService" class="org.openmrs.module.emrapi.diagnosis.ObsGroupDiagnosisService">
        <property name="emrApiProperties" ref="emrApiProperties"/>
        <property name="obsService" ref="obsService"/>
        <property name="encounterService" ref="encounterService"/>
        <property name="emrVisitDAO" ref="emrVisitDAOImpl"/>
    </bean>

    <bean id="emrDiagnosisService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <bean class="${project.parent.groupId}.${project.parent.artifactId}.diagnosis.DiagnosisServiceImpl">
                <property name="coreDiagnosisService" ref="coreDiagnosisService"/>
                <property name="obsGroupDiagnosisService" ref="obsGroupDiagnosisService"/>
                <property name="adminService" ref="adminService"/>
            </bean>
        </property>
        <property name="preInterceptors">
            <ref bean="serviceInterceptors"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="transactionAttributeSource"/>
        </property>
    </bean>

    <bean parent="serviceContext">
        <property name="moduleService">
            <list merge="true">
                <value>${project.parent.groupId}.${project.parent.artifactId}.diagnosis.DiagnosisService</value>
                <ref bean="emrDiagnosisService"/>
            </list>
        </property>
    </bean>

</beans>
